[{"C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\index.js":"1","C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\App.js":"2","C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\Components\\MoviesData.js":"3","C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\Components\\MoviesList.js":"4","C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\Components\\MovieCard\\MovieCard.js":"5","C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\Components\\AddMovie\\AddMovie.js":"6","C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\Components\\Rate.js":"7","C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\Components\\SearchMovie\\SearchMovie.js":"8","C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\Components\\MovieDescription.js":"9"},{"size":394,"mtime":1608486617124,"results":"10","hashOfConfig":"11"},{"size":1271,"mtime":1609622123287,"results":"12","hashOfConfig":"11"},{"size":3608,"mtime":1609543526150,"results":"13","hashOfConfig":"11"},{"size":607,"mtime":1608523650306,"results":"14","hashOfConfig":"11"},{"size":1086,"mtime":1609623295466,"results":"15","hashOfConfig":"11"},{"size":3417,"mtime":1608520351978,"results":"16","hashOfConfig":"11"},{"size":579,"mtime":1608524120910,"results":"17","hashOfConfig":"11"},{"size":623,"mtime":1609533720362,"results":"18","hashOfConfig":"11"},{"size":886,"mtime":1609624493913,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"vd861k",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\index.js",[],["41","42"],"C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\App.js",[],"C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\Components\\MoviesData.js",[],"C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\Components\\MoviesList.js",[],"C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\Components\\MovieCard\\MovieCard.js",[],"C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\Components\\AddMovie\\AddMovie.js",["43"],"\r\nimport React, { useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport ReactDOM from 'react-dom';\r\nimport '../AddMovie/Addmovie.css'\r\n\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst AddMovie = ({ addmovie }) =>{\r\n    const [name, setName] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const [rating, setRating] = useState(0);\r\n    const [description, setDescription] = useState(\"\");\r\n    const [date, setDate] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n\r\n\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const openModal = () => {\r\n        setIsOpen(true);\r\n         };\r\n       \r\n   const closeModal = () => {\r\n       setIsOpen(false);\r\n         }; \r\n    \r\n   const handelSubmit =()=>{\r\n       \r\n    let newmovie ={\r\n        name,\r\n        image,\r\n        rating,\r\n        description,\r\n        date,\r\n        type,\r\n    }\r\n    addmovie(newmovie);//relating the new movie to the List\r\n    setIsOpen(false);//closing modal after using\r\n    setName('');//Reseting all the input\r\n    setImage('');\r\n    setRating(0);\r\n    setDescription('');\r\n    setDate('');\r\n    setType('');\r\n   };\r\n    \r\n    return(\r\n\r\n        <div>\r\n      <div className=\"Add-btn-container\">\r\n        <button className=\"Add-btn\" onClick={openModal}>\r\n          +\r\n        </button>\r\n        <Modal\r\n          className=\"add-modal\"\r\n          isOpen={modalIsOpen}\r\n          onRequestClose={closeModal}\r\n        >\r\n          <h1 className=\"addMovie-h1\">Add A Movie</h1>\r\n          <form>\r\n            <label>Movie Name</label>\r\n            <input \r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              required\r\n              onChange={(e) => setName(e.target.value)}/>\r\n            <label>Movie Rate</label>\r\n            <div className=\"rating-search\">\r\n              \r\n            </div>\r\n            <input\r\n                type=\"number\"\r\n                name=\"rating\"\r\n                value={rating}\r\n                required\r\n                min='1'\r\n                max='5'\r\n                onChange={(e) => setRating(e.target.value)}\r\n            />\r\n            <label>Movie Release Date</label>\r\n            <input \r\n                type=\"number\"\r\n                name=\"date\"\r\n                value={date}\r\n                required\r\n                onChange={(e) => setDate(e.target.value)}/>\r\n            <label>Movie Image</label>\r\n            <input\r\n                type=\"url\"\r\n                name=\"image\"\r\n                value={image}\r\n                required\r\n                onChange={(e) => setImage(e.target.value)}/>\r\n            <label>Movie Type</label>\r\n            <input \r\n                type=\"text\"\r\n                name=\"type\"\r\n                value={type}\r\n                required\r\n                onChange={(e) => setType(e.target.value)}/>\r\n            <label>Movie Summary</label>\r\n            <textarea \r\n                type=\"text\"\r\n                name=\"description\"\r\n                value={description}\r\n                required\r\n                onChange={(e) => setDescription(e.target.value)}/>\r\n          </form>\r\n          <button className=\"Modal-btn\" onClick={handelSubmit}>\r\n            Submit\r\n          </button>\r\n          <button className=\"Modal-btn\" onClick={closeModal}>\r\n            close\r\n          </button>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    );\r\n};\r\nexport default AddMovie;","C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\Components\\Rate.js",["44","45"],"import React from 'react'\r\n\r\nconst Rate = ({ rating, setSearchrate }) => {\r\n    const stars =(x) => {\r\n        let stararray=[];\r\n        for (let i = 1 ; i <= 5; i++ ){\r\n            if (i <= x ){\r\n                stararray.push(<a onClick={()=> setSearchrate(i) }>★</a>)\r\n            }else{\r\n                stararray.push(<a onClick={()=> setSearchrate(i) }>☆</a>)\r\n            }\r\n        }\r\n        return stararray;\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      {stars(rating)}\r\n    </div>\r\n  )\r\n}\r\n\r\nRate.defaultProps = {\r\n  setSearchrate:() => {},\r\n};\r\n\r\nexport default Rate\r\n","C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\Components\\SearchMovie\\SearchMovie.js",[],"C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\Components\\MovieDescription.js",["46","47"],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":4,"column":8,"nodeType":"54","messageId":"55","endLine":4,"endColumn":16},{"ruleId":"56","severity":1,"message":"57","line":8,"column":32,"nodeType":"58","endLine":8,"endColumn":68},{"ruleId":"56","severity":1,"message":"57","line":10,"column":32,"nodeType":"58","endLine":10,"endColumn":68},{"ruleId":"52","severity":1,"message":"59","line":2,"column":15,"nodeType":"54","messageId":"55","endLine":2,"endColumn":23},{"ruleId":"60","severity":1,"message":"61","line":18,"column":13,"nodeType":"58","endLine":18,"endColumn":99},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Redirect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]