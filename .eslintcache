[{"C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\index.js":"1","C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\App.js":"2","C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\Components\\MoviesData.js":"3","C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\Components\\MoviesList.js":"4","C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\Components\\MovieCard\\MovieCard.js":"5","C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\Components\\AddMovie\\AddMovie.js":"6","C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\Components\\Rate.js":"7","C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\Components\\SearchMovie\\SearchMovie.js":"8"},{"size":394,"mtime":1608486617124,"results":"9","hashOfConfig":"10"},{"size":911,"mtime":1608523425901,"results":"11","hashOfConfig":"10"},{"size":3277,"mtime":1608505087082,"results":"12","hashOfConfig":"10"},{"size":607,"mtime":1608523650306,"results":"13","hashOfConfig":"10"},{"size":976,"mtime":1608520449710,"results":"14","hashOfConfig":"10"},{"size":3417,"mtime":1608520351978,"results":"15","hashOfConfig":"10"},{"size":579,"mtime":1608524120910,"results":"16","hashOfConfig":"10"},{"size":611,"mtime":1608522928097,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vd861k",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\index.js",[],"C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\App.js",[],"C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\Components\\MoviesData.js",[],["36","37"],"C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\Components\\MoviesList.js",[],"C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\Components\\MovieCard\\MovieCard.js",[],"C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\Components\\AddMovie\\AddMovie.js",["38"],"\r\nimport React, { useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport ReactDOM from 'react-dom';\r\nimport '../AddMovie/Addmovie.css'\r\n\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst AddMovie = ({ addmovie }) =>{\r\n    const [name, setName] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const [rating, setRating] = useState(0);\r\n    const [description, setDescription] = useState(\"\");\r\n    const [date, setDate] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n\r\n\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const openModal = () => {\r\n        setIsOpen(true);\r\n         };\r\n       \r\n   const closeModal = () => {\r\n       setIsOpen(false);\r\n         }; \r\n    \r\n   const handelSubmit =()=>{\r\n       \r\n    let newmovie ={\r\n        name,\r\n        image,\r\n        rating,\r\n        description,\r\n        date,\r\n        type,\r\n    }\r\n    addmovie(newmovie);//relating the new movie to the List\r\n    setIsOpen(false);//closing modal after using\r\n    setName('');//Reseting all the input\r\n    setImage('');\r\n    setRating(0);\r\n    setDescription('');\r\n    setDate('');\r\n    setType('');\r\n   };\r\n    \r\n    return(\r\n\r\n        <div>\r\n      <div className=\"Add-btn-container\">\r\n        <button className=\"Add-btn\" onClick={openModal}>\r\n          +\r\n        </button>\r\n        <Modal\r\n          className=\"add-modal\"\r\n          isOpen={modalIsOpen}\r\n          onRequestClose={closeModal}\r\n        >\r\n          <h1 className=\"addMovie-h1\">Add A Movie</h1>\r\n          <form>\r\n            <label>Movie Name</label>\r\n            <input \r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              required\r\n              onChange={(e) => setName(e.target.value)}/>\r\n            <label>Movie Rate</label>\r\n            <div className=\"rating-search\">\r\n              \r\n            </div>\r\n            <input\r\n                type=\"number\"\r\n                name=\"rating\"\r\n                value={rating}\r\n                required\r\n                min='1'\r\n                max='5'\r\n                onChange={(e) => setRating(e.target.value)}\r\n            />\r\n            <label>Movie Release Date</label>\r\n            <input \r\n                type=\"number\"\r\n                name=\"date\"\r\n                value={date}\r\n                required\r\n                onChange={(e) => setDate(e.target.value)}/>\r\n            <label>Movie Image</label>\r\n            <input\r\n                type=\"url\"\r\n                name=\"image\"\r\n                value={image}\r\n                required\r\n                onChange={(e) => setImage(e.target.value)}/>\r\n            <label>Movie Type</label>\r\n            <input \r\n                type=\"text\"\r\n                name=\"type\"\r\n                value={type}\r\n                required\r\n                onChange={(e) => setType(e.target.value)}/>\r\n            <label>Movie Summary</label>\r\n            <textarea \r\n                type=\"text\"\r\n                name=\"description\"\r\n                value={description}\r\n                required\r\n                onChange={(e) => setDescription(e.target.value)}/>\r\n          </form>\r\n          <button className=\"Modal-btn\" onClick={handelSubmit}>\r\n            Submit\r\n          </button>\r\n          <button className=\"Modal-btn\" onClick={closeModal}>\r\n            close\r\n          </button>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    );\r\n};\r\nexport default AddMovie;","C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\Components\\Rate.js",["39","40"],"C:\\Users\\Helmi.Arem\\Desktop\\Gomycode\\Falfoul\\reacthook\\movieapp\\src\\Components\\SearchMovie\\SearchMovie.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":4,"column":8,"nodeType":"47","messageId":"48","endLine":4,"endColumn":16},{"ruleId":"49","severity":1,"message":"50","line":8,"column":32,"nodeType":"51","endLine":8,"endColumn":68},{"ruleId":"49","severity":1,"message":"50","line":10,"column":32,"nodeType":"51","endLine":10,"endColumn":68},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]